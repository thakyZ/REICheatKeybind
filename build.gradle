import java.text.SimpleDateFormat

plugins {
  id "fabric-loom" version "0.10-SNAPSHOT"
  id "maven-publish"
  id "java"
  id "java-library"
  id "com.matthewprenger.cursegradle" version "1.4.0"
}

group = project.maven_group
archivesBaseName = project.mod_id
version = "${project.mod_version}+${project.comp_minecraft_version}"

repositories {
  maven { url "https://maven.modmuss50.me/" }
  maven { url "https://maven.shedaniel.me/" }
  maven { url 'https://www.cursemaven.com' }
}

processResources {
  filesMatching('fabric.mod.json') {
    expand(
        'mod_version': project.mod_version,
        'minecraft_version': project.minecraft_version,
        'dep_minecraft_version': project.dep_minecraft_version,
        'dep_loader_version': project.dep_loader_version,
        'dep_fabric_version': project.dep_fabric_version
    )
  }
  filteringCharset "UTF-8"
  inputs.properties(
      'mod_version': project.mod_version,
      'minecraft_version': project.minecraft_version,
      'dep_minecraft_version': project.dep_minecraft_version,
      'dep_loader_version': project.dep_loader_version,
      'dep_fabric_version': project.dep_fabric_version
  )
}

dependencies {
  //to change the versions see the gradle.properties file
  minecraft "com.mojang:minecraft:${project.minecraft_version}"
  mappings "net.fabricmc:yarn:${project.minecraft_version}+${project.yarn_mappings}:v2"
  modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
  modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"
  modImplementation("me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}") {
    exclude(module: "fabric-api")
  }
  //modImplementation("curse.maven:roughly-searchable-392023:${project.roughly_searchable_version}") {
  //  exclude(module: "fabric-api")
  //}
  modCompileOnly('com.google.code.findbugs:jsr305:3.0.2') {
    transitive(false)
  }
}

def targetJavaVersion = 16
tasks.withType(JavaCompile).configureEach {
  // ensure that the encoding is set to UTF-8, no matter what the system default is
  // this fixes some edge cases with special characters not displaying correctly
  // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
  // If Javadoc is generated, this must be specified in that task too.
  it.options.encoding = "UTF-8"
  if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
    it.options.release = targetJavaVersion
  }
}

java {
  def javaVersion = JavaVersion.toVersion(targetJavaVersion)
  if (JavaVersion.current() < javaVersion) {
    toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
  }
  archivesBaseName = project.archivesBaseName
  // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
  // if it is present.
  // If you remove this line, sources will not be generated.
  withSourcesJar()
}

jar {
  from("LICENSE") {
    rename { "${it}_${project.archivesBaseName}"}
  }
}

def releaseChangelog = "No changelog"

/* Thank you modmenu & fablabs */
task releaseOnCf {
  def df = new SimpleDateFormat("yyyy-MM-dd HH:mm")
  df.setTimeZone(TimeZone.getTimeZone("UTC"))
  def branch
  if (System.getenv().BRANCH_NAME) {
    branch = System.getenv().BRANCH_NAME
    branch = branch.substring(branch.lastIndexOf("/") + 1)
  } else {
    branch = "git rev-parse --abbrev-ref HEAD".execute().in.text.trim()
  }
  if (branch == "HEAD") {
    branch = "git rev-parse --short HEAD".execute().in.text.trim()
  }
  def time = df.format(new Date())
  def changes = new StringBuilder()
  changes << "<h2>REI Cheat Keybind v${mod_version} for ${comp_minecraft_version}</h2>Updated at <b>${time}</b>" +
    ".<br><a href=\"https://github.com/thakyZ/REICheatKeybind/commits/${branch}\">Click here for changelog</a>"
  def proc = "git log --max-count=200 --pretty=format:%s".execute()
  proc.in.eachLine { line ->
    def processedLine = line.toString()
    if (!processedLine.contains("New translations") && !processedLine.contains("Merge") && !processedLine.contains("branch")) {
      changes << "<br>- ${processedLine.toUpperCase()}"
    }
  }
  proc.waitFor()
  releaseChangelog = changes.toString()
  dependsOn tasks.getByName("curseforge")
}

curseforge {
  apiKey = project.hasProperty("curseForgeApiKey") ? project.curseForgeApiKey : ""
  //noinspection GroovyAssignabilityCheck
  project {
    id = project.id
    releaseType = project.releaseType
    changelogType = "html"
    changelog = releaseChangelog
    addGameVersion "Fabric"
    addGameVersion "Java 8"
    relations {
      requiredDependency "fabric-api"
      requiredDependency "roughly-enough-items"
    }
    if (project.dep_minecraft_version != project.minecraft_version) {
      addGameVersion project.dep_minecraft_version
      addGameVersion project.minecraft_version
    } else {
      addGameVersion project.minecraft_version
    }
    mainArtifact(file("${project.buildDir}/libs/${project.archivesBaseName}-${project.version}.jar")) {
      displayName = "[Fabric $project.comp_minecraft_version] v$project.mod_version"
    }
    addArtifact(file("${project.buildDir}/libs/${project.archivesBaseName}-${project.version}-sources.jar")) {
      displayName = "[Fabric $project.comp_minecraft_version] v$project.mod_version Sources"
    }
    afterEvaluate {
      uploadTask.dependsOn("build")
    }
    //noinspection GroovyAssignabilityCheck
    options {
      forgeGradleIntegration = false
    }
  }
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      artifact(sourcesJar) {
        builtBy remapSourcesJar
      }
      pom.withXml {
        def depsNode = asNode().appendNode("dependencies")
        subprojects.each {
          def depNode = depsNode.appendNode("dependency")
          depNode.appendNode("groupId", it.group)
          depNode.appendNode("artifactId", it.name)
          depNode.appendNode("version", it.version)
          depNode.appendNode("scope", "compile")
        }
      }
      artifactId = mod_id
      artifact(remapJar) {
        builtBy remapJar
      }
      artifact(sourcesJar) {
        classifier = 'sources'
        builtBy remapSourcesJar
      }
    }
  }

  repositories {
    maven {
      url "https://www.cursemaven.com/"
    }
  }
}